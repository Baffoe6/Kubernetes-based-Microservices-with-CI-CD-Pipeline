{{- if .Values.usersService.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: users-service-config
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "microservices.labels" . | nindent 4 }}
data:
  {{- range $key, $value := .Values.usersService.env }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-service
  namespace: {{ .Values.namespace }}
  labels:
    app: users-service
    {{- include "microservices.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.usersService.replicaCount }}
  selector:
    matchLabels:
      app: users-service
  template:
    metadata:
      labels:
        app: users-service
    spec:
      containers:
      - name: users-service
        image: "{{ .Values.usersService.image.repository }}:{{ .Values.usersService.image.tag }}"
        imagePullPolicy: {{ .Values.usersService.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.usersService.service.targetPort }}
        env:
        {{- range $key, $value := .Values.usersService.env }}
        - name: {{ $key }}
          valueFrom:
            configMapKeyRef:
              name: users-service-config
              key: {{ $key }}
        {{- end }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        resources:
          {{- toYaml .Values.usersService.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health/live
            port: {{ .Values.usersService.service.targetPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: {{ .Values.usersService.service.targetPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: users-service
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "microservices.labels" . | nindent 4 }}
spec:
  selector:
    app: users-service
  ports:
  - port: {{ .Values.usersService.service.port }}
    targetPort: {{ .Values.usersService.service.targetPort }}
    protocol: TCP
  type: {{ .Values.usersService.service.type }}
{{- end }}
