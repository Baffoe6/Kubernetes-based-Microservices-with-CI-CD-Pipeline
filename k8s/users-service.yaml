apiVersion: v1
kind: ConfigMap
metadata:
  name: users-service-config
  namespace: microservices
data:
  PORT: "3000"
  DB_HOST: postgres-service
  DB_PORT: "5432"
  DB_NAME: users_db
  DB_USER: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-service
  namespace: microservices
  labels:
    app: users-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: users-service
  template:
    metadata:
      labels:
        app: users-service
    spec:
      containers:
      - name: users-service
        image: users-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: users-service-config
              key: PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: users-service-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: users-service-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: users-service-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: users-service-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: users-service
  namespace: microservices
spec:
  selector:
    app: users-service
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: LoadBalancer
